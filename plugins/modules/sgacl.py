#!/usr/bin/python
# -*- coding: utf-8 -*-

# Copyright (c) 2021, Cisco Systems
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

DOCUMENTATION = r"""
---
module: sgacl
short_description: Resource module for SGacl
description:
  - Manage operation create of the resource SGacl.
version_added: '1.0.0'
extends_documentation_fragment:
  - cisco.ise.module
author: Rafael Campos (@racampos)
options:
  aclcontent:
    description: SGacl's aclcontent.
    type: str
  description:
    description: Description.
    type: str
  generationId:
    description: GenerationId is a read only attribute and is being generated by the
      server.
    type: str
  id:
    description: Id.
    type: str
  ipVersion:
    description: Allowed values IPV4,IPV6,IP_AGNOSTIC.
    type: str
  modelledContent:
    description: Modelled content of contract.
    type: dict
  name:
    description: Name.
    type: str
  readOnly:
    description: ReadOnly flag.
    type: bool
  sgACLType:
    description: SGACL type - Trustsec or Traffic Steering.To use it as filter, the
      values should be 'TRAFFIC_STEERING' or 'TRUSTSEC'. The values are case sensitive.For
      example, 'ERSObjectURL?filter=sgACLType.eq.TRUSTSEC' or 'ERSObjectURL?filter=sgACLType.eq.TRAFFIC_STEERING'.
    type: str
requirements:
  - ciscoisesdk >= 2.0.1
  - python >= 3.5
notes:
  - SDK Method used are
    sgacl.Sgacl.create_sgacl,
  - Paths used are
    post /sgacl/,
"""
EXAMPLES = r"""
---
- name: Create
  cisco.ise.sgacl:
    ise_hostname: "{{ise_hostname}}"
    ise_username: "{{ise_username}}"
    ise_password: "{{ise_password}}"
    ise_verify: "{{ise_verify}}"
    state: present
    aclcontent: Permit IP
    description: description
    id: f75760e7-a4f9-40ef-93bb-88a97e9fb171
    ipVersion: IPV4
    name: name
    readOnly: false
    sgAclType: TRUSTSEC
"""
RETURN = r"""
ise_response:
  description: A dictionary or list with the response returned by the Cisco ISE Python SDK
  returned: always
  type: list
  elements: dict
  sample: >
    [
      {
        "id": "string",
        "name": "string",
        "description": "string",
        "link": {
          "rel": "string",
          "href": "string",
          "type": "string"
        }
      }
    ]
"""
